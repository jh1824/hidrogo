---
title: "Como usar quarto"
author: "Jymmi"
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed-resources: true
    output-file: index 
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

# Como usar cuarto?

## fuentes

-   Negrita: *esta es una fuente negrita*
-   Cursia: Solamun Tuberosum

## Formulas matemàticas

Este es el area de una circunferencia $Area_{circunferencia}=pi\cdot r^2$

Esta es una formula cualquiera $$\frac{\left(2x-1\right)^2-1}{4}=k$$

# Mi primera pagina web.

1.  Tener mi proyecto
2.  conectar mi poryecto a github
3.  Tener un archivo en formato html llamado index.hetml
4.  Activar Gi thub pages

# Modelos lineales mixtos

## Importar datos

```{r}
source('https://inkaverse.com/setup.r')


url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"

gs <- url %>% 
  as_sheets_id()

fb <- gs %>% 
  range_read("fb")


str(fb)
```

## Modelo lineal lfa

```{r}
modelo <- aov(formula = lfa ~  bloque + riego + geno + riego*geno
          , data = fb)

anova(modelo)

plot(modelo)
```

### boxplot

```{r}
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
  geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
  labs(title = "Boxplot con interacción de niveles de riego y genotipo",
       x = "Interacción Riego y Genotipo",
       y = "Area Folicar (cm^2)")
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas del eje X
```

## Modelo lineal de hi

```{r}
modelo <- aov(formula = hi ~  bloque + riego + geno + riego*geno
          , data = fb)

anova(modelo)

plot(modelo)
```

### boxplot

```{r}
ggplot(fb, aes(x = geno, y = hi, colour = riego)) +
  geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
  labs(title = "Boxplot con interacción de niveles de riego y genotipo",
       x = "Interacción Riego y Genotipo",
       y = "Indice de Cosecha  (cm^2)")
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas del eje X
```

## Modelo lineal mixto: lfa

```{r}
library(lme4)

library(lmerTest)

model <- lme4::lmer(formula = lfa ~ riego * geno + (1|bloque), data = fb)
anova(model)

plot(modelo)

ol <- boxplot(lfa ~ riego * geno, fb)
ol
```

```{r}
library(inti)

model <- remove_outliers(data = fb
                             , formula = lfa ~ riego * geno + (1|bloque)
                         , plot_diag = T)
model
```

```{r}
```

```{r}
getwd()

```

```         
```

```{r}

```

```{r}
library(ggplot2)

# Cargar los datos
fb <- read.csv("C:/Users/ACER/Documents/programacion/jhinmy")

# Crear el boxplot con interacción de niveles de riego y genotipo
ggplot(fb, aes(x = geno, y = hi, colour = riego)) +
  geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
  labs(title = "Boxplot con interacción de niveles de riego y genotipo",
       x = "Interacción Riego y Genotipo",
       y = "Índice de Cosecha  (cm^2)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas del eje X

```

```{r}
library(ggplot2)

# Cargar los datos
fb <- read.csv("C:/Users/ACER/Documents/programacion/jhinmy
```

```{r}
library(agricolae)
modelo <- lm(formula = block + lfa ~ riego + geno + riego*geno
          , data = fb)

# Realizar ANOVA
anova_result <- anova(modelo)

# Mostrar resultados del ANOVA
print(anova_result)

# Ahora hacemos la comparación de medias usando una prueba post-hoc.
# Supongamos que quieres hacer la prueba de Tukey sobre los niveles de 'riego' y 'geno'

# Hacer la prueba de Tukey para el factor riego
tukey_riego <- HSD.test(modelo, "riego", group = TRUE
```

```{r}
modelo <- lm(formula = lfa - bloque + riego + geno + riego*geno
             , data = fb)
anova(modelo)
library(agricolae)
tukey_result <- HSD.test(modelo
                         , c("geno","riego")
                         , group = TRUE)
print(tukey_result)
plot(tukey_result)


```

# Compracion de medias

```{r}
modelo <- aov(formula = lfa ~  bloque + riego + geno + riego*geno
          , data = fb)

anova(modelo)

plot(modelo)
```

## Comparacion de medias con Tukey con chat GPT

### Comparacion de medias de tukey (riego )

```{r}
library(agricolae)
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)
plot(tukey_riego)
```

### Comparacion de medias de tukey (geno )

```{r}
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
plot(tukey_geno)
```

### Comparacion de medias de tukey (Interraccion riego y geno)

```{r}
library(tidyverse)
tukey_interaccion <- HSD.test(modelo, c("riego","geno"), group = TRUE)
print(tukey_interaccion)
plot(tukey_interaccion)

str(tukey_interaccion)

grupos <- tukey_interaccion$groups %>% 
  rownames_to_column("Tratamientos") %>% 
  separate("Tratamientos", into = c("riego","geno"))

str(grupos)
```

```{r}
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  labs(title = "Efecto de Geno y Riego en LFA",
       x = "Genotipo",
       y = "LFA") +
  theme_minimal() +
  scale_fill_discrete(name = "Riego") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
